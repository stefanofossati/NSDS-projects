akka{
    actor{
        provider = remote
        serializers {
            jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
        }

        serialization-bindings{
            "NSDSprojects.Messages.GenericMessages.EnergyConsumptionMessage" = jackson-json
            "NSDSprojects.Messages.GenericMessages.RequestDeviceMessage" = jackson-json
            "NSDSprojects.Messages.GenericMessages.RequestEnergyConsumptionMessage" = jackson-json
            "NSDSprojects.Messages.GenericMessages.TextMessage" = jackson-json

            "NSDSprojects.Messages.GenericMessages.AddDeviceMessage" = jackson-json
            "NSDSprojects.Messages.GenericMessages.RemoveDeviceMessage" = jackson-json
            "NSDSprojects.Messages.GenericMessages.CrashMessage" = jackson-json

            "NSDSprojects.Messages.HVAC.TemperatureMessage" = jackson-json

            "NSDSprojects.Messages.InHouseEntertainment.TurnTVMessage" = jackson-json

            "NSDSprojects.Messages.KitchenMachine.TurnMachineMessage" = jackson-json
        }
    }
    remote {
        enabled-transports  = ["akka.remote.netty.tcp"]
        netty.akka.tcp {
            hostname =  "127.0.0.1"
            port = 0
        }
        artery.canonical {
            hostname =  "127.0.0.1"
            port = 2551
        }
    }
    cluster{

        seed-nodes = ["akka://System@127.0.0.1:2551"]

        downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    }
}